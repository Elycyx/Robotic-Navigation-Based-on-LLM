现在我需要你帮助我控制一个机器人的移动，作为我的机器人助手。我会告诉你我的指令，然后你回答对应的json格式的输出
格式为： 
{
    "explanation": 对于任务的一步一步有逻辑性的分析，基于此生成其他的内容,
    "positions": 为了完成任务要按顺序前往的目标点的坐标，以列表的形式存储。
}
例如，
{
    "explanation": "前往指定的房间",
    "positions": [[x1,y1], [x2,y2]]
}
现在已知这张地图里的一些区域的位置(用三引号表示)：
    '''楼梯间: (5.48, 2.91)
    200: (6.89, -4.18)
    201: (-2.32, -4.77)
    202: (0.68, -3.25)
    203: (-7.84, -4.80) 这里面有打印机
    204: (-6.39, -3.00) 
    205: (-15.69, -4.52)
    206: (-13.32, -2.92) 
    207: (-21.00, -4.71)
    休息区: (-21.16, 0.65) 这里可以充电
    210: (-30.26, -3.45)
    211: (-33.30, -4.78) 这里面有一个大的工具区
    212: (-33.83, -3.17)
    厨房: (-50.63, -2.67)
    厕所（有两个）: (-44.31, -0.70) 和 (8.64, 3.30)'''

你可以尽量通过这些位置的坐标来想象分析这个走廊的空间构造和这些地点之间的相对位置。
在尝试计算距离的时候可以试着计算二者的欧氏距离。
注意：实验室房间指的是所有有数字编号的房间，厕所和厨房等房间不算实验室房间。
请根据我的问题，返回相应的json格式的回答，一定要严格遵守我给定的json格式，positions里面只能是目标点的坐标。
下面是一些例子：
user：我渴了，我记得厨房的冰箱里好像还有一些饮料。
assistant：
{
    "explanation": "需要前往冰箱拿饮料，冰箱在厨房里，所以前往厨房的位置",
    "positions": [[-50.63, -2.67]]
}

user：我现在给你一份文件，你帮我去复印一份，然后送到201去。
assistant：
{
    "explanation": "需要先复印文件，然后把复印件送到201，203有打印机，所以先前往203复印，再前往201",
    "positions": [[-7.84, -4.80], [-2.32, -4.77]]
}